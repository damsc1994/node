{"version":3,"sources":["api-test.js"],"names":["debug","require","test","request","server","sinon","proxyquire","AgentFixture","util","auth","config","sign","promisify","sandbox","dbStub","AgentStub","MetricStub","serv","token","beforeEach","createSandbox","stub","call","Promise","resolve","admin","username","console","log","api","afterEach","restore","serial","cb","t","get","expect","set","end","err","res","body","JSON","stringify","falsy","truthy","todo"],"mappings":"AAAA;;;;;AAEA,MAAMA,QAAQC,QAAQ,OAAR,EAAiB,sBAAjB,CAAd;AACA,MAAMC,OAAOD,QAAQ,KAAR,CAAb;AACA,MAAME,UAAUF,QAAQ,WAAR,CAAhB;AACA,MAAMG,SAASH,QAAQ,WAAR,CAAf;AACA,MAAMI,QAAQJ,QAAQ,OAAR,CAAd;AACA,MAAMK,aAAaL,QAAQ,YAAR,CAAnB;AACA,MAAMM,eAAeN,QAAQ,kBAAR,CAArB;AACA,MAAMO,OAAOP,QAAQ,MAAR,CAAb;AACA,MAAMQ,OAAOR,QAAQ,SAAR,CAAb;AACA,MAAMS,SAAST,QAAQ,WAAR,CAAf;;AAEA,MAAMU,OAAOH,KAAKI,SAAL,CAAeH,KAAKE,IAApB,CAAb;AACA,IAAIE,UAAU,IAAd;AACA,IAAIC,SAAS,IAAb;AACA,IAAIC,YAAY,IAAhB;AACA,IAAIC,aAAa,IAAjB;AACA,IAAIC,OAAO,IAAX;AACA,IAAIC,QAAQ,IAAZ;;AAEAhB,KAAKiB,UAAL,CAAgB,YAAY;AACxBN,cAAUR,MAAMe,aAAN,EAAV;;AAEAN,aAASD,QAAQQ,IAAR,EAAT;AACAP,WAAOQ,IAAP,CAAYC,QAAQC,OAAR,CAAgB;AACxBT,iBADwB;AAExBC;AAFwB,KAAhB,CAAZ;;AAKAE,YAAQP,KAAK,EAACc,OAAO,IAAR,EAAcC,UAAU,OAAxB,EAAL,EAAuChB,OAAOD,IAA9C,EAAoDkB,QAAQC,GAA5D,CAAR;;AAEA,UAAMC,MAAMvB,WAAW,QAAX,EAAqB;AAC7B,yBAAiBQ;AADY,KAArB,CAAZ;;AAIAG,WAAOX,WAAW,WAAX,EAAwB;AAC3B,iBAASuB;AADkB,KAAxB,CAAP;AAGH,CAlBD;;AAoBA3B,KAAK4B,SAAL,CAAe,YAAY;AACvBjB,eAAWA,QAAQkB,OAAR,EAAX;AACH,CAFD;;AAIA7B,KAAK8B,MAAL,CAAYC,EAAZ,CAAe,aAAf,EAA8BC,KAAK;AAC/BlC,UAAM,MAAN;AACAG,YAAQC,MAAR,EACE+B,GADF,CACM,aADN,EAEEC,MAFF,CAES,GAFT,EAGEC,GAHF,CAGM,cAHN,EAGuB,UAASnB,KAAM,EAHtC,EAIEkB,MAJF,CAIS,cAJT,EAIwB,MAJxB,EAKEE,GALF,CAKM,CAACC,GAAD,EAAMC,GAAN,KAAc;AAAA;AAAA;;AAChB,YAAIC,OAAOC,KAAKC,SAAL,CAAeH,IAAIC,IAAnB,CAAX;AACAP,UAAEU,KAAF,uBAAQL,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAa,6BAAb;AACAL,UAAEW,MAAF,yBAASJ,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAe,yCAAf;AACAP,UAAEI,GAAF;AACF,KAVF;AAWH,CAbD;;AAeApC,KAAK8B,MAAL,CAAYc,IAAZ,CAAiB,kBAAjB;AACA5C,KAAK8B,MAAL,CAAYc,IAAZ,CAAiB,8BAAjB;;AAEA5C,KAAK8B,MAAL,CAAYc,IAAZ,CAAiB,oBAAjB;AACA5C,KAAK8B,MAAL,CAAYc,IAAZ,CAAiB,gCAAjB;;AAEA5C,KAAK8B,MAAL,CAAYc,IAAZ,CAAiB,0BAAjB;AACA5C,KAAK8B,MAAL,CAAYc,IAAZ,CAAiB,sCAAjB","file":"api-test.js","sourcesContent":["'use strict'\n\nconst debug = require('debug')('platziserve:api:test')\nconst test = require('ava')\nconst request = require('supertest')\nconst server = require('../server')\nconst sinon = require('sinon')\nconst proxyquire = require('proxyquire')\nconst AgentFixture = require('./fixtures/agent')\nconst util = require('util')\nconst auth = require('../auth')\nconst config = require('../config')\n\nconst sign = util.promisify(auth.sign)\nlet sandbox = null\nlet dbStub = null\nlet AgentStub = null\nlet MetricStub = null\nlet serv = null\nlet token = null\n\ntest.beforeEach(async () => {\n    sandbox = sinon.createSandbox()\n\n    dbStub = sandbox.stub()\n    dbStub.call(Promise.resolve({\n        AgentStub,\n        MetricStub\n    }))\n\n    token = sign({admin: true, username: 'admin'}, config.auth, console.log) \n\n    const api = proxyquire('../api', {\n        'platziserveDB': dbStub\n    })\n\n    serv = proxyquire('../server', {\n        './api': api\n    })\n})\n\ntest.afterEach(async () => {\n    sandbox && sandbox.restore()\n})\n\ntest.serial.cb('/api/agents', t => {\n    debug('test')\n    request(server)\n     .get('/api/agents')\n     .expect(200)\n     .set('Content-type', `Bearer ${token}`)\n     .expect('content-type',/json/)\n     .end((err, res) => {\n        let body = JSON.stringify(res.body);\n        t.falsy(err, 'Hubo un error en api/agents')\n        t.truthy(body, 'api/agents no trajo los datos esperados')\n        t.end()\n     })\n})\n\ntest.serial.todo('/api/agent/:uuid')\ntest.serial.todo('/api/agent/:uuid - not found')\n\ntest.serial.todo('/api/metrics/:uuid')\ntest.serial.todo('/api/metrics/:uuid - not found')\n\ntest.serial.todo('/api/metrics/:uuid/:type')\ntest.serial.todo('/api/metrics/:uuid/:type - not found')"]}